import React, { useState, useEffect } from 'react';
import Logo from './image/logo.png';
import Logo_2 from './image/logo_footer.png';
import kakao from './image/kakao.png';
import instagram from './image/instagram.png';
import 느림1 from './image/느림이2.png';
import 느림2 from './image/느림이1.png';
import login_kakao from './image/login_kakao.png';
import login_google from './image/login_google.png';
import './App.css';
import { GoogleOAuthProvider, GoogleLogin, googleLogout } from '@react-oauth/google';

const Modal = ({ isOpen, onClose, children }) => {
  if (!isOpen) return null;
  return (
    <div className="modal-overlay">
      <div className="modal">
        <button className="close-button" onClick={onClose}><log_close>x</log_close></button>
        {children}
      </div>
    </div>
  );
};

const App = () => {
  const [isScrolled, setIsScrolled] = useState(false);
  const [isLoginModalOpen, setIsLoginModalOpen] = useState(false);
  const [isSignupModalOpen, setIsSignupModalOpen] = useState(false);
  const [isLoggedIn, setIsLoggedIn] = useState(false); // 로그인 상태 추가

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 30);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const openLoginModal = () => setIsLoginModalOpen(true);
  const closeLoginModal = () => setIsLoginModalOpen(false);
  const openSignupModal = () => setIsSignupModalOpen(true);
  const closeSignupModal = () => setIsSignupModalOpen(false);

  const handleGoogleLoginSuccess = (response) => {
    console.log('Google login success:', response);
    setIsLoggedIn(true); // 로그인 상태 변경
  };

  const handleGoogleLoginFailure = (response) => {
    console.log('Google login failure:', response);
  };

  const handleLogout = () => {
    googleLogout();
    setIsLoggedIn(false); // 로그인 상태 변경
    console.log('Logged out');
  };

  return (
    <GoogleOAuthProvider clientId="74889504083-d7907v2stf16mhj95a83f2113tbmgoer.apps.googleusercontent.com">
      <div className='app'>
        <header className={`nav_bar ${isScrolled ? 'scrolled' : ''}`}>
          <div className='nav_logo'>
            <img src={Logo} alt="BigCo Inc. logo" />
          </div>
          <ul className='nav_main'>
            <li><a href='#'>저속노화 발걸음</a></li>
            <li><a href='#'>월간 통계</a></li>
          </ul>
          <div className='nav_login'>
            {!isLoggedIn ? (
              <div className='login' onClick={openLoginModal}>로그인</div>
            ) : (
              <div className='logout' onClick={handleLogout}>
                <button>로그아웃</button>
              </div>
            )}
            {!isLoggedIn && (
              <div className='signup' onClick={openSignupModal}> 회원가입</div>
            )}
          </div>
        </header>

		<img src={느림_메인} alt="BigCo Inc. logo" className='slowness_mai' />
		
        <div className='content'>
          <section className='login_section'>
            <p className='login_message'>
              저속노화<span className='font_light1'>로 건강한 삶을 오래 유지하고 싶으신가요?</span>
            </p>
            <p className='login_message2'>
              <span>느림의 미학</span>과 함께라면 어렵지 않아요!
            </p>
            {!isLoggedIn && (
              <>
                <GoogleLogin
                  onSuccess={handleGoogleLoginSuccess}
                  onFailure={handleGoogleLoginFailure}
                  render={renderProps => (
                    <button className='login_button google' onClick={renderProps.onClick} disabled={renderProps.disabled}>
                      <img src={login_google} alt="Google Login" />
                    </button>
                  )}
                />
                <button className='login_button kakao'>
                  <img src={login_kakao} alt="Kakao Login" />
                </button>
              </>
            )}
          </section>

          <section className='description_section'>
            <h2>저속노화가 무엇인가요?</h2>
            <p>노화 과정을 천천히 진행시키고, 가능한 한 건강하게 나이를 먹도록<br />도와주는 생활습관과 방법들을 실천하는 것입니다</p>
          </section>

          <section className='features_section'>
            <h2>느림의 미학에서 함께할 수 있어요</h2>
            <div className='features'>
              <div className='feature'>
                <div className='feature_header'>
                  <p>1</p>
                </div>
                <p><span className='font_light1'>저속노화를 위한 첫번째 걸음</span></p>
                <p2>저속노화 발걸음</p2>
              </div>
              <div className="wrapper">
                <img src={느림1} alt="BigCo Inc. logo" className="absolute-img1" />
              </div>
              <div className="wrapper">
                <img src={느림2} alt="BigCo Inc. logo" className="absolute-img2" />
              </div>
              <div className='feature'>
                <div className='feature_header'>
                  <p>2</p>
                </div>
                <p><span className='font_light1'>한 달의 통계를 통해 건강 지키기</span></p>
                <p2>월간 통계</p2>
              </div>
            </div>
          </section>
        </div>

        <footer className='footer'>
          <div className='footer-content'>
            <div className='footer-icon'>
              <img src={Logo_2} alt="Footer Icon" />
            </div>
            <div className='footer-links'>
              <a href="/terms">이용약관</a>
              <a href="/privacy">개인정보처리방침</a>
              <a href="/guide">이용가이드</a>
              <a href="/about">ABOUT US</a>
            </div>
            <div className='social-icons'>
              <a href="https://instagram.com"><img src={instagram} alt="Instagram" /></a>
              <a href="https://kakaotalk.com"><img src={kakao} alt="KakaoTalk" /></a>
            </div>
          </div>
          <p className='address'>찾아오시는 길 : 대전광역시 유성구 동서대로 125 한밭대학교</p>
          <p className='copyright'>Copyright © 느림의 미학. All rights reserved.</p>
        </footer>

        <Modal isOpen={isLoginModalOpen} onClose={closeLoginModal}>
          <h2>로그인</h2>
          <GoogleLogin
            onSuccess={handleGoogleLoginSuccess}
            onFailure={handleGoogleLoginFailure}
            render={renderProps => (
              <button onClick={renderProps.onClick} disabled={renderProps.disabled}>
                <img src={login_google} alt="Google Login" />
              </button>
            )}
          />
          <input type="text" placeholder="아이디" />
          <input type="password" placeholder="비밀번호" />
          <button><login>로그인</login></button>
        </Modal>

        <Modal isOpen={isSignupModalOpen} onClose={closeSignupModal}>
          <h2>회원가입</h2>
          <input type="text" placeholder="아이디" />
          <input type="email" placeholder="이메일" />
          <input type="password" placeholder="비밀번호" />
          <input type="password" placeholder="비밀번호 확인" />
          <button>회원가입</button>
        </Modal>
      </div>
    </GoogleOAuthProvider>
  );
};

export default App;
